<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nadia.config.notification.dao.TaskMapper">
  <resultMap id="BaseResultMap" type="com.nadia.config.notification.domain.Task">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="action" jdbcType="VARCHAR" property="action" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `action`, `status`, `role_id`, `created_at`, `created_by`, `updated_at`, `updated_by`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.nadia.config.notification.domain.TaskCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.nadia.config.notification.domain.TaskCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nadia.config.notification.domain.TaskCriteria">
    delete from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nadia.config.notification.domain.Task">
    insert into task (`id`, `action`, `status`,
      `role_id`, `created_at`, `created_by`,
      `updated_at`, `updated_by`)
    values (#{id,jdbcType=BIGINT}, #{action,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
      #{roleId,jdbcType=BIGINT}, #{createdAt,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}
  </insert>
  <insert id="insertSelective" parameterType="com.nadia.config.notification.domain.Task">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      <if test="action != null">
        `action`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="roleId != null">
        `role_id`,
      </if>
      <if test="createdAt != null">
        `created_at`,
      </if>
      <if test="createdBy != null">
        `created_by`,
      </if>
      <if test="updatedAt != null">
        `updated_at`,
      </if>
      <if test="updatedBy != null">
        `updated_by`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="action != null">
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nadia.config.notification.domain.TaskCriteria" resultType="java.lang.Long">
    select count(*) from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.action != null">
        `action` = #{record.action,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        `role_id` = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.createdAt != null">
        `created_at` = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        `created_by` = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedAt != null">
        `updated_at` = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        `updated_by` = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update task
    set `id` = #{record.id,jdbcType=BIGINT},
      `action` = #{record.action,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      `role_id` = #{record.roleId,jdbcType=BIGINT},
      `created_at` = #{record.createdAt,jdbcType=TIMESTAMP},
      `created_by` = #{record.createdBy,jdbcType=VARCHAR},
      `updated_at` = #{record.updatedAt,jdbcType=TIMESTAMP},
      `updated_by` = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task
    set `id` = #{record.id,jdbcType=BIGINT},
      `action` = #{record.action,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      `role_id` = #{record.roleId,jdbcType=BIGINT},
      `created_at` = #{record.createdAt,jdbcType=TIMESTAMP},
      `created_by` = #{record.createdBy,jdbcType=VARCHAR},
      `updated_at` = #{record.updatedAt,jdbcType=TIMESTAMP},
      `updated_by` = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nadia.config.notification.domain.Task">
    update task
    <set>
      <if test="action != null">
        `action` = #{action,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        `role_id` = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        `created_at` = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        `created_by` = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        `updated_at` = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        `updated_by` = #{updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.nadia.config.notification.domain.Task">
    update task
    set `action` = #{action,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      `role_id` = #{roleId,jdbcType=BIGINT},
      `created_at` = #{createdAt,jdbcType=TIMESTAMP},
      `created_by` = #{createdBy,jdbcType=VARCHAR},
      `updated_at` = #{updatedAt,jdbcType=TIMESTAMP},
      `updated_by` = #{updatedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nadia.config.notification.domain.Task">
    update task
    set `action` = #{action,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      `role_id` = #{roleId,jdbcType=BIGINT},
      `created_at` = #{createdAt,jdbcType=TIMESTAMP},
      `created_by` = #{createdBy,jdbcType=VARCHAR},
      `updated_at` = #{updatedAt,jdbcType=TIMESTAMP},
      `updated_by` = #{updatedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>